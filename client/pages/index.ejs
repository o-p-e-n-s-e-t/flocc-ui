<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Document</title>
    <script src="https://unpkg.com/flocc"></script>
    <script src="/dist/flocc-ui.js"></script>
  </head>
  <body>
    <div id="container" style="width: 300px"></div>
    <div id="panel"></div>
    <div id="canvas"></div>
    <script>
      const { Agent, Environment, CanvasRenderer, utils } = window.flocc;
      const { Panel, Slider, Input, Button, Radio } = window.floccUI;

      const [width, height] = [500, 500];
      const environment = new Environment({ width, height });
      environment.set("dx", 0);
      environment.set("dy", 0);

      function tick(agent) {
        agent.set("size", environment.get("size"));
        agent.set("color", environment.get("color"));
        agent.increment("x", environment.get("dx"));
        agent.increment("y", environment.get("dy"));
      }

      for (let i = 0; i < 100; i++) {
        const agent = new Agent({
          x: utils.random(0, width),
          y: utils.random(0, height),
          size: 2,
        });
        agent.addRule(tick);
        environment.addAgent(agent);
      }

      const renderer = new CanvasRenderer(environment, { width, height });
      renderer.mount("#canvas");

      (function run() {
        environment.tick();
        requestAnimationFrame(run);
      })();

      new Panel(environment, [
        new Slider({
          name: "dx",
          label: "DX",
          min: -2,
          max: 2,
        }),
        new Slider({
          name: "dy",
          min: 0,
          max: 4,
          step: 0.5,
        }),
        new Slider({
          name: "dy",
          label: "another dy",
          min: 0,
          max: 4,
        }),
        new Input({
          label: "Hello there",
          type: "number",
          name: "size",
          value: 1,
          step: 0.25,
          live: true,
          min: 1,
          max: 4.5,
        }),
        new Input({
          name: "color",
          label: "color",
          value: "red",
        }),
        new Radio({
          choices: [-2, 0, 2],
          choiceLabels: ["left", "stop", "right"],
          value: 0,
          name: "dx",
        }),
        new Button({
          label: () => environment.time.toString(),
          onClick() {
            environment.set({
              dx: 0,
              dy: 0,
            });
          },
        }),
      ]);
    </script>
  </body>
</html>
